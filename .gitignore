# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# AWS & Cloud Provider credentials
.aws/
aws.conf
aws-config
.azure/
.gcp/
credentials
credentials.json
service-account.json
gcloud-service-key.json

# SSH Keys & Certificates
*.pem
*.key
*.crt
*.cert
*.p12
*.jks
*.pfx
id_rsa*
id_ed25519*
known_hosts

# Environment files
.env
.env.*
.envrc
.envrc.local

# Secrets & Passwords
*secret*
*password*
*passwd*
*token*
vault.yml
secrets.yml

# IDE & Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# OS generated files
.DS_Store?
ehthumbs.db
Icon?

# Backup files
*.bak
*.backup
*.old
*.orig

# Log files
*.log
logs/
*.out

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Database files
*.db
*.sqlite
*.sqlite3

# Application specific
kubeconfig*
.kube/config
.kubectl_aliases
